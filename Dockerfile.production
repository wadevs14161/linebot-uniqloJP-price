# Multi-stage Docker build for UNIQLO Price Finder
# Supports both local development and Cloud Run deployment

# Stage 1: Build React frontend
FROM node:18-alpine AS frontend-builder

WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production

COPY frontend/ .
RUN npm run build

# Stage 2: Python application
FROM python:3.12-slim

WORKDIR /app

# Install system dependencies required for PostgreSQL and Cloud SQL
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Download and install Cloud SQL Proxy (for container deployment)
RUN wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O /usr/local/bin/cloud_sql_proxy \
    && chmod +x /usr/local/bin/cloud_sql_proxy

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY app.py .
COPY crawl.py .
COPY reply.py .
COPY database.py .

# Copy built frontend from previous stage
COPY --from=frontend-builder /app/frontend/dist ./static/frontend

# Copy any additional static assets
COPY static/ ./static/

# Create data directory for SQLite fallback
RUN mkdir -p data

# Copy startup script
COPY docker-entrypoint.sh .
RUN chmod +x docker-entrypoint.sh

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=app.py
ENV PORT=8080

# Expose the port
EXPOSE 8080

# Use the entrypoint script that handles both local and Cloud Run deployment
ENTRYPOINT ["./docker-entrypoint.sh"]
CMD ["python", "app.py"]
